version: "3.8"

networks:
  my-app-network:

services:

    # PHP Server
    php:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes: 
            - ./:/var/www
        ports:
            - 8000:8000
        depends_on:
            - mysql
            #- redis
        networks:
            - my-app-network

    # Websocket Server
    websocket:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=websocket
        working_dir: /var/www
        volumes: 
            - ./:/var/www
        ports:
            - 6001:6001
        depends_on:
            #- mysql
            - redis

    # Database Server
    mysql:
        image: mysql:8.0
        ports: 
            - 3306:3306
        environment:
            #- MYSQL_CONNECTION=${DB_CONNECTION}
            #- MYSQL_HOST=${DB_HOST}
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            #- db-data:/var/www/database/seeds
            - db-data:/var/lib/mysql
        networks:
            - my-app-network

    # PHPMYADMIN Server
    phpmyadmin:
        image: phpmyadmin:latest
        ports: 
            - 80:80
        depends_on:
            - mysql
        environment:
            #-PMA_HOST: mysql
            #-PMA_USER: root
            - PMA_ARBITRARY=1
        networks:
            - my-app-network

    # Redis Server
    redis:
        image:  redis:alpine
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
        - 6379:6379

    # Queue Server
    #queue:
        #build:
            #context: .
            #target: php
            #args:
                #- APP_ENV=${APP_ENV}
        #environment:
            #- APP_ENV=${APP_ENV}
            #- CONTAINER_ROLE=queue
        #working_dir: /var/www
        #volumes:
            #- ./:/var/www

    # Node Server
    node:
        build:
            target: node
        volumes:
            - .:/usr/src
            - ./node_modules:/usr/node_modules
        tty: true
           

volumes:
    #./database/seeds: ~
    db-data: ~